{"version":3,"sources":["/home/leo/Documentos/projetos/mine/TCC/StudeoUAI/backend/studeouai-api/src/modules/class/repositories/in-memory/SpecificationsRepositoryInMemory.ts"],"names":[],"mappingsgBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,sDAAA,CAAA,CAAA;AAOA,IAAA,+BAAA;AAAA;AAAA,0BAAA,YAAA;AAAA;AAAA;;AAAA,WAAA,+BAAA,GAAA;AAAA;AAAA;AAAA;AACU,SAAA,cAAA,GAAkC,EAAlC;AA0BT;;AA3BD;AAAA;;AAGQ,EAAA,+BAAA,CAAA,SAAA,CAAA,MAAA,GAAN,UAAa,EAAb,EAG0B;AAAA;AAAA;QAFxB,IAAI;AAAA;AAAA,8BAAA,EAAA,CAAA,IAAA,C;QACJ,WAAW;AAAA;AAAA,8BAAA,EAAA,CAAA,WAAA,C;;AACa;AAAA;;;;;;;;;;;;AAClB,QAAA,aAAa,GAAG,IAAI,gBAAA,CAAA,aAAJ,EAAhB;;;;AACN,QAAA,MAAM,CAAC,MAAP,CAAc,aAAd,EAA6B;AAC3B,UAAA,IAAI,EAAA,IADuB;AAE3B,UAAA,WAAW,EAAA;AAFgB,SAA7B;;;;AAIA,aAAK,cAAL,CAAoB,IAApB,CAAyB,aAAzB;;;;AACA,eAAA,CAAA;AAAA;AAAA,UAAO,aAAP,CAAA;;;AACD,GAXK;;AAHR;AAAA;;AAgBQ,EAAA,+BAAA,CAAA,SAAA,CAAA,UAAA,GAAN,UAAiB,IAAjB,EAA6B;AAAA;AAAA;AAAA;;;;;;;;;AAC3B,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,cAAL,CAAoB,IAApB,CACL,UAAC,aAAD,EAAc;AAAA;AAAA;AAAA;AAAK,iBAAA,aAAa,CAAC,IAAd,KAAA,IAAA;AAA2B,SADzC,CAAP,CAAA;;;AAGD,GAJK;;AAhBR;AAAA;;AAsBQ,EAAA,+BAAA,CAAA,SAAA,CAAA,QAAA,GAAN,UAAe,GAAf,EAA4B;AAAA;AAAA;AAAA;;;;;;;;;AAC1B,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,cAAL,CAAoB,MAApB,CAA2B,UAAC,aAAD,EAAc;AAAA;AAAA;AAAA;AAC9C,iBAAA,GAAG,CAAC,QAAJ,CAAa,aAAa,CAAC,EAA3B,CAAA;AAA8B,SADzB,CAAP,CAAA;;;AAGD,GAJK;;AAtBR;AAAA;AA2BA,SAAA,+BAAA;AAAC,CA3BD,EAAA,CAAA;;;;AA6BS,OAAA,CAAA,+BAAA,GAAA,+BAAA","sourcesContent":["import { Specification } from \"@modules/class/infra/typeorm/entities/Specifications\";\n\nimport {\n  ICreateSpecificationDTO,\n  ISpecificationsRepository,\n} from \"../ISpecificationsRepository\";\n\nclass SpecificationRepositoryInMemory implements ISpecificationsRepository {\n  private specifications: Specification[] = [];\n\n  async create({\n    name,\n    description,\n  }: ICreateSpecificationDTO): Promise<Specification> {\n    const specification = new Specification();\n    Object.assign(specification, {\n      name,\n      description,\n    });\n    this.specifications.push(specification);\n    return specification;\n  }\n\n  async findByName(name: string): Promise<Specification> {\n    return this.specifications.find(\n      (specification) => specification.name === name\n    );\n  }\n\n  async findById(ids: string[]): Promise<Specification[]> {\n    return this.specifications.filter((specification) =>\n      ids.includes(specification.id)\n    );\n  }\n}\n\nexport { SpecificationRepositoryInMemory };\n"]}