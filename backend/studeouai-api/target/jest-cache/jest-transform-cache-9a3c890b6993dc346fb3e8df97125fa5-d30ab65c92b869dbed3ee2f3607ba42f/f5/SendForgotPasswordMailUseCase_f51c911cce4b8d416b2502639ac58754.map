{"version":3,"sources":["/home/leo/Documentos/projetos/mine/TCC/StudeoUAI/backend/studeouai-api/src/modules/accounts/useCases/sendForgotPasswordMail/SendForgotPasswordMailUseCase.ts"],"names":[],"mappingseAFV,EAKU,qBALV,EAQU,YARV,EAWU,YAXV,EAWqC;AAAA;AAAA;AAAA;AAT3B,SAAA,eAAA,GAAA,eAAA;;AAS2B;AAAA;AAN3B,SAAA,qBAAA,GAAA,qBAAA;;AAM2B;AAAA;AAH3B,SAAA,YAAA,GAAA,YAAA;;AAG2B;AAAA;AAA3B,SAAA,YAAA,GAAA,YAAA;AACN;;AAbN;AAAA;;AAeQ,EAAA,6BAAA,CAAA,SAAA,CAAA,OAAA,GAAN,UAAc,KAAd,EAA2B;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AACZ,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,eAAL,CAAqB,WAArB,CAAiC,KAAjC,CAAN,CAAA;;;;;;AAAP,YAAA,IAAI,GAAG,EAAA,CAAA,IAAA,EAAP;;;;;AACN,gBAAI,CAAC,IAAL,EAAW;AAAA;AAAA;AAAA;AACT,oBAAM,IAAI,6BAAA,CAAA,2BAAJ,EAAN;AACD,aAFD;AAAA;AAAA;AAAA;AAAA;;;AAIM,YAAA,YAAY,GAAG,KAAK,YAAL,CAAkB,QAAlB,CAA2B,CAA3B,EAA8B,IAA9B,CAAf;;;;AACA,YAAA,KAAK,GAAG,CAAA,GAAA,MAAA,CAAA,EAAA,GAAR;;;;AACN,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,qBAAL,CAA2B,MAA3B,CAAkC;AACtC,cAAA,aAAa,EAAE,KADuB;AAEtC,cAAA,OAAO,EAAE,IAAI,CAAC,EAFwB;AAGtC,cAAA,YAAY,EAAA;AAH0B,aAAlC,CAAN,CAAA;;;;;;;AAAA,YAAA,EAAA,CAAA,IAAA;;;;AAMM,YAAA,YAAY,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EACnB,SADmB,EAEnB,IAFmB,EAGnB,IAHmB,EAInB,OAJmB,EAKnB,QALmB,EAMnB,oBANmB,CAAf;;;;AASA,YAAA,iBAAiB,GAAG;AACxB,cAAA,IAAI,EAAE,IAAI,CAAC,IADa;AAExB,cAAA,IAAI,EAAE,KAAG,OAAO,CAAC,GAAR,CAAY,eAAf,GAAiC;AAFf,aAApB,C,CAIN;;;;AAEA,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,YAAL,CAAkB,QAAlB,CAA2B;AAC/B,cAAA,EAAE,EAAE,IAAI,CAAC,KADsB;AAE/B,cAAA,OAAO,EAAE,sBAFsB;AAG/B,cAAA,IAAI,EAAE,YAHyB;AAI/B,cAAA,SAAS,EAAE;AAJoB,aAA3B,CAAN,CAAA;;;;;;;AAFA;AAEA,YAAA,EAAA,CAAA,IAAA;;;;;;;;;;AAMD,GAnCK;;AAfR;AAAA;AAAM,EAAA,6BAA6B,GAAA,UAAA,CAAA,CADlC,CAAA,GAAA,UAAA,CAAA,UAAA,GACkC,EAE9B,OAAA,CAAA,CAAA,EAAA,CAAA,GAAA,UAAA,CAAA,MAAA,EAAO,iBAAP,CAAA,CAF8B,EAK9B,OAAA,CAAA,CAAA,EAAA,CAAA,GAAA,UAAA,CAAA,MAAA,EAAO,uBAAP,CAAA,CAL8B,EAQ9B,OAAA,CAAA,CAAA,EAAA,CAAA,GAAA,UAAA,CAAA,MAAA,EAAO,mBAAP,CAAA,CAR8B,EAW9B,OAAA,CAAA,CAAA,EAAA,CAAA,GAAA,UAAA,CAAA,MAAA,EAAO,cAAP,CAAA,CAX8B,E,iEAAA,CAAA,EAA7B,6BAA6B,CAA7B;;AAAN;AAAA;AAmDA,SAAA,6BAAA;AAAC,CAnDD,EAAA,CAAA;;;;AAqDS,OAAA,CAAA,6BAAA,GAAA,6BAAA","sourcesContent":["import { resolve } from \"path\";\nimport { inject, injectable } from \"tsyringe\";\nimport { v4 as uuidV4 } from \"uuid\";\n\nimport { IUsersRepository } from \"@modules/accounts/repositories/IUsersRepository\";\nimport { IUsersTokensRepository } from \"@modules/accounts/repositories/IUsersTokensRepository\";\nimport { IDateProvider } from \"@shared/container/providers/DateProvider/IDateProvider\";\nimport { IMailProvider } from \"@shared/container/providers/MailProvider/IMailProvider\";\n\nimport { SendForgotPasswordMailError } from \"./SendForgotPasswordMailError\";\n\n@injectable()\nclass SendForgotPasswordMailUseCase {\n  constructor(\n    @inject(\"UsersRepository\")\n    private usersRepository: IUsersRepository,\n\n    @inject(\"UsersTokensRepository\")\n    private UsersTokensRepository: IUsersTokensRepository,\n\n    @inject(\"DayjsDateProvider\")\n    private dateProvider: IDateProvider,\n\n    @inject(\"MailProvider\")\n    private mailProvider: IMailProvider\n  ) {}\n\n  async execute(email: string): Promise<void> {\n    const user = await this.usersRepository.findByEmail(email);\n    if (!user) {\n      throw new SendForgotPasswordMailError();\n    }\n\n    const expires_date = this.dateProvider.addHours(3, null);\n    const token = uuidV4();\n    await this.UsersTokensRepository.create({\n      refresh_token: token,\n      user_id: user.id,\n      expires_date,\n    });\n\n    const templatePath = resolve(\n      __dirname,\n      \"..\",\n      \"..\",\n      \"views\",\n      \"emails\",\n      \"ForgotPassword.hbs\"\n    );\n\n    const templateVariables = {\n      name: user.name,\n      link: `${process.env.FORGOT_MAIL_URL}${token}`,\n    };\n    // FORGOT_MAIL_URL = http://localhost:3333/password/reset?token=\n\n    await this.mailProvider.sendMail({\n      to: user.email,\n      subject: \"Recuperação de senha\",\n      path: templatePath,\n      variables: templateVariables,\n    });\n  }\n}\n\nexport { SendForgotPasswordMailUseCase };\n"]}