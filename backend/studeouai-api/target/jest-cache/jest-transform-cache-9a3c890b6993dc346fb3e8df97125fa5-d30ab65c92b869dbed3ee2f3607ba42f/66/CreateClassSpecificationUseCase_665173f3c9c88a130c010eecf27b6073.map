{"version":3,"sources":["/home/leo/Documentos/projetos/mine/TCC/StudeoUAI/backend/studeouai-api/src/modules/class/useCases/createClassSpecification/CreateClassSpecificationUseCase.ts"],"names":[],"mappingsiCAAA,CAAA,CAAA;AAQA,IAAA,+BAAA;AAAA;AAAA,0BAAA,YAAA;AAAA;AAAA;;AACE,WAAA,+BAAA,CAEU,eAFV,EAIU,uBAJV,EAI4D;AAAA;AAAA;AAAA;AAFlD,SAAA,eAAA,GAAA,eAAA;;AAEkD;AAAA;AAAlD,SAAA,uBAAA,GAAA,uBAAA;AACN;;AANN;AAAA;;AAQQ,EAAA,+BAAA,CAAA,SAAA,CAAA,OAAA,GAAN,UAAc,EAAd,EAAwD;AAAA;AAAA;QAAxC,QAAQ;AAAA;AAAA,8BAAA,EAAA,CAAA,QAAA,C;QAAE,kBAAkB;AAAA;AAAA,8BAAA,EAAA,CAAA,kBAAA,C;;AAAY;AAAA;;;;;;;;;;;;;;;;;;;AACvC,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,eAAL,CAAqB,QAArB,CAA8B,QAA9B,CAAN,CAAA;;;;;;AAAT,YAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;;;;;AACN,gBAAI,CAAC,MAAL,EAAa;AAAA;AAAA;AAAA;AACX,oBAAM,IAAI,+BAAA,CAAA,6BAAA,CAA8B,aAAlC,EAAN;AACD,aAFD;AAAA;AAAA;AAAA;AAAA;;;AAIuB,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,uBAAL,CAA6B,QAA7B,CAC3B,kBAD2B,CAAN,CAAA;;;;;;AAAjB,YAAA,cAAc,GAAG,EAAA,CAAA,IAAA,EAAjB;;;;;AAGN,gBAAI,cAAc,CAAC,MAAf,KAA0B,CAA9B,EAAiC;AAAA;AAAA;AAAA;AAC/B,oBAAM,IAAI,+BAAA,CAAA,6BAAA,CAA8B,qBAAlC,EAAN;AACD,aAFD;AAAA;AAAA;AAAA;AAAA;;;AAIA,YAAA,MAAM,CAAC,cAAP,GAAwB,cAAxB;;;;AACA,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,eAAL,CAAqB,MAArB,CAA4B,MAA5B,CAAN,CAAA;;;;;;;AAAA,YAAA,EAAA,CAAA,IAAA;;;;AACA,mBAAA,CAAA;AAAA;AAAA,cAAO,MAAP,CAAA;;;;AACD,GAhBK;;AARR;AAAA;AAAM,EAAA,+BAA+B,GAAA,UAAA,CAAA,CADpC,CAAA,GAAA,UAAA,CAAA,UAAA,GACoC,EAEhC,OAAA,CAAA,CAAA,EAAA,CAAA,GAAA,UAAA,CAAA,MAAA,EAAO,iBAAP,CAAA,CAFgC,EAIhC,OAAA,CAAA,CAAA,EAAA,CAAA,GAAA,UAAA,CAAA,MAAA,EAAO,0BAAP,CAAA,CAJgC,E,iDAAA,CAAA,EAA/B,+BAA+B,CAA/B;;AAAN;AAAA;AAyBA,SAAA,+BAAA;AAAC,CAzBD,EAAA,CAAA;;;;AA2BS,OAAA,CAAA,+BAAA,GAAA,+BAAA","sourcesContent":["import { inject, injectable } from \"tsyringe\";\n\nimport { Class } from \"@modules/class/infra/typeorm/entities/Class\";\nimport { IClassRepository } from \"@modules/class/repositories/IClassRepository\";\nimport { ISpecificationsRepository } from \"@modules/class/repositories/ISpecificationsRepository\";\n\nimport { CreateClassSpecificationError } from \"./CreateClassSpecificationError\";\n\ninterface IRequest {\n  class_id: string;\n  specifications_ids: string[];\n}\n\n@injectable()\nclass CreateClassSpecificationUseCase {\n  constructor(\n    @inject(\"ClassRepository\")\n    private classRepository: IClassRepository,\n    @inject(\"SpecificationsRepository\")\n    private specificationRepository: ISpecificationsRepository\n  ) {}\n\n  async execute({ class_id, specifications_ids }: IRequest): Promise<Class> {\n    const _class = await this.classRepository.findById(class_id);\n    if (!_class) {\n      throw new CreateClassSpecificationError.ClassNotFound();\n    }\n\n    const specifications = await this.specificationRepository.findById(\n      specifications_ids\n    );\n    if (specifications.length === 0) {\n      throw new CreateClassSpecificationError.SpecificationNotFound();\n    }\n\n    _class.specifications = specifications;\n    await this.classRepository.create(_class);\n    return _class;\n  }\n}\n\nexport { CreateClassSpecificationUseCase };\n"]}