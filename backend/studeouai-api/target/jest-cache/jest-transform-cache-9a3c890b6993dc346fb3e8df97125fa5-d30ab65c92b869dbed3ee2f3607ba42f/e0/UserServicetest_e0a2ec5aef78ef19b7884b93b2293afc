c6ff8515a2e8955631711a3d93b639eb
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var typeorm_mock_1 = require("@modules/test/mock/typeorm.mock");
var UserService_1 = __importDefault(require("./UserService"));
var faker_1 = __importDefault(require("faker"));
var appError_1 = require("@shared/errors/appError");
describe('Test Pending Transaction Service', function () {
    beforeEach(function () {
        typeorm_mock_1.repositoryMock.find.mockRestore();
        typeorm_mock_1.repositoryMock.findOne.mockRestore();
        typeorm_mock_1.repositoryMock.save.mockRestore();
        typeorm_mock_1.repositoryMock.update.mockRestore();
    });
    test('Should return response object when call to create with success', function () { return __awaiter(void 0, void 0, void 0, function () {
        var createUserReturnMock, createUserMock, userService, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    createUserReturnMock = {
                        id: faker_1.default.datatype.uuid(),
                        name: faker_1.default.datatype.string(),
                        password: faker_1.default.datatype.string(),
                        email: faker_1.default.internet.email(),
                        isAdmin: false,
                        avatar: faker_1.default.datatype.string(),
                        avatar_url: faker_1.default.datatype.string(),
                    };
                    createUserMock = {
                        name: faker_1.default.datatype.uuid(),
                        password: faker_1.default.datatype.uuid(),
                        email: faker_1.default.internet.email(),
                        isAdmin: false,
                        avatar: faker_1.default.datatype.string(),
                    };
                    typeorm_mock_1.repositoryMock.create.mockResolvedValue(createUserReturnMock);
                    userService = new UserService_1.default();
                    return [4 /*yield*/, userService.createUser(createUserMock)];
                case 1:
                    response = _a.sent();
                    expect(response).toBe(createUserReturnMock);
                    expect(response).toBeTruthy();
                    return [2 /*return*/];
            }
        });
    }); });
    test('Should error when try create a exists user', function () { return __awaiter(void 0, void 0, void 0, function () {
        var createUserReturnMock, createUserMock, userService;
        return __generator(this, function (_a) {
            createUserReturnMock = {
                id: faker_1.default.datatype.uuid(),
                name: faker_1.default.datatype.string(),
                password: faker_1.default.datatype.string(),
                email: faker_1.default.internet.email(),
                isAdmin: false,
                avatar: faker_1.default.datatype.string(),
                avatar_url: faker_1.default.datatype.string(),
            };
            createUserMock = {
                name: faker_1.default.datatype.uuid(),
                password: faker_1.default.datatype.uuid(),
                email: faker_1.default.internet.email(),
                isAdmin: false,
                avatar: faker_1.default.datatype.string(),
            };
            typeorm_mock_1.repositoryMock.create.mockResolvedValue(createUserReturnMock);
            userService = new UserService_1.default();
            userService.createUser(createUserMock);
            try {
                userService.createUser(createUserMock);
            }
            catch (err) {
                console.log(err);
                expect(err).toBeInstanceOf(appError_1.AppError);
                expect(err.message).toEqual('User already exists');
            }
            return [2 /*return*/];
        });
    }); });
    test('Should return response object when find user by id', function () { return __awaiter(void 0, void 0, void 0, function () {
        var createUserReturnMock, userService, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    createUserReturnMock = {
                        id: faker_1.default.datatype.uuid(),
                        name: faker_1.default.datatype.string(),
                        password: faker_1.default.datatype.string(),
                        email: faker_1.default.internet.email(),
                        isAdmin: false,
                        avatar: faker_1.default.datatype.string(),
                        avatar_url: faker_1.default.datatype.string(),
                    };
                    typeorm_mock_1.repositoryMock.findOne.mockResolvedValue(createUserReturnMock);
                    userService = new UserService_1.default();
                    return [4 /*yield*/, userService.findUserById('Any_Value')];
                case 1:
                    response = _a.sent();
                    expect(response).toBe(createUserReturnMock);
                    expect(response).toBeTruthy();
                    return [2 /*return*/];
            }
        });
    }); });
    test('Should return error when call to user by id', function () { return __awaiter(void 0, void 0, void 0, function () {
        var findUserById, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    typeorm_mock_1.repositoryMock.findOne.mockRejectedValue(new appError_1.AppError('User not found', 404));
                    findUserById = new UserService_1.default();
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, findUserById.findUserById('Any_Value')];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    expect(error_1.message).toEqual('User not found');
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,