{"version":3,"sources":["/home/leo/Documentos/projetos/mine/TCC/StudeoUAI/backend/studeouai-api/src/shared/providers/storage-provider/s3-storage-provider.ts"],"names":[],"mappingseAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,IAAA,MAAA;AAAA;AAAA,0BAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AACA,IAAA,MAAA;AAAA;AAAA,0BAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAEA,IAAA,QAAA;AAAA;AAAA,0BAAA,eAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA,CAAA;AACA,IAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,aAAA,CAAA,CAAA;AAIA,IAAA,iBAAA;AAAA;AAAA,0BAAA,YAAA;AAAA;AAAA;;AAGE,WAAA,iBAAA,GAAA;AAAA;AAAA;AAAA;AACE,SAAK,MAAL,GAAc,IAAI,SAAA,CAAA,EAAJ,CAAO;AACnB,MAAA,MAAM,EAAE,OAAO,CAAC,GAAR,CAAY;AADD,KAAP,CAAd;AAGD;;AAPH;AAAA;;AASQ,EAAA,iBAAA,CAAA,SAAA,CAAA,IAAA,GAAN,UAAW,IAAX,EAAyB,MAAzB,EAAuC;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAC/B,YAAA,YAAY,GAAG,MAAA,CAAA,OAAA,CAAK,OAAL,CAAa,QAAA,CAAA,OAAA,CAAO,SAApB,EAA+B,IAA/B,CAAf;;;;AACc,mBAAA,CAAA;AAAA;AAAA,cAAM,IAAA,CAAA,OAAA,CAAG,QAAH,CAAY,QAAZ,CAAqB,YAArB,CAAN,CAAA;;;;;;AAAd,YAAA,WAAW,GAAG,EAAA,CAAA,IAAA,EAAd;;;;AAEN,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,MAAL,CACH,SADG,CACO;AACT,cAAA,MAAM,EAAK,OAAO,CAAC,GAAR,CAAY,UAAZ,GAAsB,GAAtB,GAA0B,MAD5B;AAET,cAAA,GAAG,EAAE,IAFI;AAGT,cAAA,GAAG,EAAE,aAHI;AAIT,cAAA,IAAI,EAAE,WAJG;AAKT,cAAA,WAAW,EAAE,MAAA,CAAA,OAAA,CAAK,OAAL,CAAa,YAAb;AALJ,aADP,EAQH,OARG,EAAN,CAAA;;;;;;;AAAA,YAAA,EAAA,CAAA,IAAA;;;;AAUA,mBAAA,CAAA;AAAA;AAAA,cAAM,CAAA,GAAA,MAAA,CAAA,UAAA,EAAW,YAAX,CAAN,CAAA;;;;;;;AAAA,YAAA,EAAA,CAAA,IAAA;;;;AAEA,mBAAA,CAAA;AAAA;AAAA,cAAO,IAAP,CAAA;;;;AACD,GAjBK;;AATR;AAAA;;AA4BQ,EAAA,iBAAA,CAAA,SAAA,CAAA,MAAA,GAAN,UAAa,IAAb,EAA2B,MAA3B,EAAyC;AAAA;AAAA;AAAA;;;;;;;;;AACvC,aAAK,MAAL,CACG,YADH,CACgB;AACZ,UAAA,MAAM,EAAK,OAAO,CAAC,GAAR,CAAY,UAAZ,GAAsB,GAAtB,GAA0B,MADzB;AAEZ,UAAA,GAAG,EAAE;AAFO,SADhB,EAKG,OALH;;;;;;;;;AAMD,GAPK;;AA5BR;AAAA;AAoCA,SAAA,iBAAA;AAAC,CApCD,EAAA,CAAA;;;;AAsCS,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourcesContent":["import { S3 } from 'aws-sdk';\nimport fs from 'fs';\nimport mime from 'mime';\nimport path from 'path';\n\nimport upload from '@config/upload';\nimport { deleteFile } from '@utils/file';\n\nimport { IStorageProvider } from '../interfaces/storage-provider';\n\nclass S3StorageProvider implements IStorageProvider {\n  private client: S3;\n\n  constructor() {\n    this.client = new S3({\n      region: process.env.AWS_BUCKET_REGION,\n    });\n  }\n\n  async save(file: string, folder: string): Promise<string> {\n    const originalName = path.resolve(upload.tmpFolder, file);\n    const fileContent = await fs.promises.readFile(originalName);\n\n    await this.client\n      .putObject({\n        Bucket: `${process.env.AWS_BUCKET}/${folder}`,\n        Key: file,\n        ACL: 'public-read',\n        Body: fileContent,\n        ContentType: mime.getType(originalName),\n      })\n      .promise();\n\n    await deleteFile(originalName);\n\n    return file;\n  }\n\n  async delete(file: string, folder: string): Promise<void> {\n    this.client\n      .deleteObject({\n        Bucket: `${process.env.AWS_BUCKET}/${folder}`,\n        Key: file,\n      })\n      .promise();\n  }\n}\n\nexport { S3StorageProvider };\n"]}