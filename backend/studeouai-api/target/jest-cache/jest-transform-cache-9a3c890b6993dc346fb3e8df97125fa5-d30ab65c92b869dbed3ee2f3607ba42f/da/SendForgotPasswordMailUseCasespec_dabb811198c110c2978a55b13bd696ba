a4f35acb6259e2c84e9b448de12fc74e
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var UsersRepositoryInMemory_1 = require("@modules/accounts/repositories/in-memory/UsersRepositoryInMemory");
var UsersTokensRepositoryInMemory_1 = require("@modules/accounts/repositories/in-memory/UsersTokensRepositoryInMemory");
var DayJsDateProvider_1 = require("@shared/container/providers/DateProvider/implementations/DayJsDateProvider");
var MailProviderInMemoy_1 = require("@shared/container/providers/MailProvider/in-memory/MailProviderInMemoy");
var SendForgotPasswordMailError_1 = require("./SendForgotPasswordMailError");
var SendForgotPasswordMailUseCase_1 = require("./SendForgotPasswordMailUseCase");
var sendForgotPasswordMailUseCase;
var usersRepositoryInMemory;
var usersTokensRepositoryInMemory;
var dateProvider;
var mailProvider;
describe("SendForgotPasswordMailUseCase", function () {
    beforeEach(function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            usersRepositoryInMemory = new UsersRepositoryInMemory_1.UsersRepositoryInMemory();
            usersTokensRepositoryInMemory = new UsersTokensRepositoryInMemory_1.UsersTokensRepositoryInMemory();
            dateProvider = new DayJsDateProvider_1.DayjsDateProvider();
            mailProvider = new MailProviderInMemoy_1.MailProviderInMemory();
            sendForgotPasswordMailUseCase = new SendForgotPasswordMailUseCase_1.SendForgotPasswordMailUseCase(usersRepositoryInMemory, usersTokensRepositoryInMemory, dateProvider, mailProvider);
            return [2 /*return*/];
        });
    }); });
    it("Should be able to send a email for a user to reset his password", function () { return __awaiter(void 0, void 0, void 0, function () {
        var sendMail;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    sendMail = spyOn(mailProvider, "sendMail");
                    return [4 /*yield*/, usersRepositoryInMemory.create({
                            email: "tokvuzer@vadinvo.gn",
                            name: "Allie Jenkins",
                            password: "test",
                        })];
                case 1:
                    _a.sent();
                    return [4 /*yield*/, sendForgotPasswordMailUseCase.execute("tokvuzer@vadinvo.gn")];
                case 2:
                    _a.sent();
                    expect(sendMail).toHaveBeenCalled();
                    return [2 /*return*/];
            }
        });
    }); });
    it("Should not be able to send a email for an inexistent user", function () { return __awaiter(void 0, void 0, void 0, function () {
        var sendMail;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    sendMail = spyOn(mailProvider, "sendMail");
                    return [4 /*yield*/, expect(sendForgotPasswordMailUseCase.execute("cucok@soson.au")).rejects.toBeInstanceOf(SendForgotPasswordMailError_1.SendForgotPasswordMailError)];
                case 1:
                    _a.sent();
                    expect(sendMail).not.toBeCalled();
                    return [2 /*return*/];
            }
        });
    }); });
    it("Should be able to create a new token to reset password", function () { return __awaiter(void 0, void 0, void 0, function () {
        var generatedToken;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    generatedToken = spyOn(usersTokensRepositoryInMemory, "create");
                    return [4 /*yield*/, usersRepositoryInMemory.create({
                            email: "tokvuzer@vadinvo.gn",
                            name: "Allie Jenkins",
                            password: "test",
                        })];
                case 1:
                    _a.sent();
                    return [4 /*yield*/, sendForgotPasswordMailUseCase.execute("tokvuzer@vadinvo.gn")];
                case 2:
                    _a.sent();
                    expect(generatedToken).toHaveBeenCalled();
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvbGVvL0RvY3VtZW50b3MvcHJvamV0b3MvbWluZS9UQ0MvU3R1ZGVvVUFJL2JhY2tlbmQvc3R1ZGVvdWFpLWFwaS9zcmMvbW9kdWxlcy9hY2NvdW50cy91c2VDYXNlcy9zZW5kRm9yZ290UGFzc3dvcmRNYWlsL1NlbmRGb3Jnb3RQYXNzd29yZE1haWxVc2VDYXNlLnNwZWMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw0R0FBMkc7QUFDM0csd0hBQXVIO0FBQ3ZILGdIQUErRztBQUMvRyw4R0FBOEc7QUFFOUcsNkVBQTRFO0FBQzVFLGlGQUFnRjtBQUVoRixJQUFJLDZCQUE0RCxDQUFDO0FBQ2pFLElBQUksdUJBQWdELENBQUM7QUFDckQsSUFBSSw2QkFBNEQsQ0FBQztBQUNqRSxJQUFJLFlBQStCLENBQUM7QUFDcEMsSUFBSSxZQUFrQyxDQUFDO0FBRXZDLFFBQVEsQ0FBQywrQkFBK0IsRUFBRTtJQUN4QyxVQUFVLENBQUM7O1lBQ1QsdUJBQXVCLEdBQUcsSUFBSSxpREFBdUIsRUFBRSxDQUFDO1lBQ3hELDZCQUE2QixHQUFHLElBQUksNkRBQTZCLEVBQUUsQ0FBQztZQUNwRSxZQUFZLEdBQUcsSUFBSSxxQ0FBaUIsRUFBRSxDQUFDO1lBQ3ZDLFlBQVksR0FBRyxJQUFJLDBDQUFvQixFQUFFLENBQUM7WUFFMUMsNkJBQTZCLEdBQUcsSUFBSSw2REFBNkIsQ0FDL0QsdUJBQXVCLEVBQ3ZCLDZCQUE2QixFQUM3QixZQUFZLEVBQ1osWUFBWSxDQUNiLENBQUM7OztTQUNILENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxpRUFBaUUsRUFBRTs7Ozs7b0JBQzlELFFBQVEsR0FBRyxLQUFLLENBQUMsWUFBWSxFQUFFLFVBQVUsQ0FBQyxDQUFDO29CQUVqRCxxQkFBTSx1QkFBdUIsQ0FBQyxNQUFNLENBQUM7NEJBQ25DLEtBQUssRUFBRSxxQkFBcUI7NEJBQzVCLElBQUksRUFBRSxlQUFlOzRCQUNyQixRQUFRLEVBQUUsTUFBTTt5QkFDakIsQ0FBQyxFQUFBOztvQkFKRixTQUlFLENBQUM7b0JBQ0gscUJBQU0sNkJBQTZCLENBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDLEVBQUE7O29CQUFsRSxTQUFrRSxDQUFDO29CQUVuRSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQzs7OztTQUNyQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsMkRBQTJELEVBQUU7Ozs7O29CQUN4RCxRQUFRLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxVQUFVLENBQUMsQ0FBQztvQkFDakQscUJBQU0sTUFBTSxDQUNWLDZCQUE2QixDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUN4RCxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMseURBQTJCLENBQUMsRUFBQTs7b0JBRnJELFNBRXFELENBQUM7b0JBRXRELE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLENBQUM7Ozs7U0FDbkMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHdEQUF3RCxFQUFFOzs7OztvQkFDckQsY0FBYyxHQUFHLEtBQUssQ0FBQyw2QkFBNkIsRUFBRSxRQUFRLENBQUMsQ0FBQztvQkFFdEUscUJBQU0sdUJBQXVCLENBQUMsTUFBTSxDQUFDOzRCQUNuQyxLQUFLLEVBQUUscUJBQXFCOzRCQUM1QixJQUFJLEVBQUUsZUFBZTs0QkFDckIsUUFBUSxFQUFFLE1BQU07eUJBQ2pCLENBQUMsRUFBQTs7b0JBSkYsU0FJRSxDQUFDO29CQUNILHFCQUFNLDZCQUE2QixDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxFQUFBOztvQkFBbEUsU0FBa0UsQ0FBQztvQkFFbkUsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDLGdCQUFnQixFQUFFLENBQUM7Ozs7U0FDM0MsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL2hvbWUvbGVvL0RvY3VtZW50b3MvcHJvamV0b3MvbWluZS9UQ0MvU3R1ZGVvVUFJL2JhY2tlbmQvc3R1ZGVvdWFpLWFwaS9zcmMvbW9kdWxlcy9hY2NvdW50cy91c2VDYXNlcy9zZW5kRm9yZ290UGFzc3dvcmRNYWlsL1NlbmRGb3Jnb3RQYXNzd29yZE1haWxVc2VDYXNlLnNwZWMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNlcnNSZXBvc2l0b3J5SW5NZW1vcnkgfSBmcm9tIFwiQG1vZHVsZXMvYWNjb3VudHMvcmVwb3NpdG9yaWVzL2luLW1lbW9yeS9Vc2Vyc1JlcG9zaXRvcnlJbk1lbW9yeVwiO1xuaW1wb3J0IHsgVXNlcnNUb2tlbnNSZXBvc2l0b3J5SW5NZW1vcnkgfSBmcm9tIFwiQG1vZHVsZXMvYWNjb3VudHMvcmVwb3NpdG9yaWVzL2luLW1lbW9yeS9Vc2Vyc1Rva2Vuc1JlcG9zaXRvcnlJbk1lbW9yeVwiO1xuaW1wb3J0IHsgRGF5anNEYXRlUHJvdmlkZXIgfSBmcm9tIFwiQHNoYXJlZC9jb250YWluZXIvcHJvdmlkZXJzL0RhdGVQcm92aWRlci9pbXBsZW1lbnRhdGlvbnMvRGF5SnNEYXRlUHJvdmlkZXJcIjtcbmltcG9ydCB7IE1haWxQcm92aWRlckluTWVtb3J5IH0gZnJvbSBcIkBzaGFyZWQvY29udGFpbmVyL3Byb3ZpZGVycy9NYWlsUHJvdmlkZXIvaW4tbWVtb3J5L01haWxQcm92aWRlckluTWVtb3lcIjtcblxuaW1wb3J0IHsgU2VuZEZvcmdvdFBhc3N3b3JkTWFpbEVycm9yIH0gZnJvbSBcIi4vU2VuZEZvcmdvdFBhc3N3b3JkTWFpbEVycm9yXCI7XG5pbXBvcnQgeyBTZW5kRm9yZ290UGFzc3dvcmRNYWlsVXNlQ2FzZSB9IGZyb20gXCIuL1NlbmRGb3Jnb3RQYXNzd29yZE1haWxVc2VDYXNlXCI7XG5cbmxldCBzZW5kRm9yZ290UGFzc3dvcmRNYWlsVXNlQ2FzZTogU2VuZEZvcmdvdFBhc3N3b3JkTWFpbFVzZUNhc2U7XG5sZXQgdXNlcnNSZXBvc2l0b3J5SW5NZW1vcnk6IFVzZXJzUmVwb3NpdG9yeUluTWVtb3J5O1xubGV0IHVzZXJzVG9rZW5zUmVwb3NpdG9yeUluTWVtb3J5OiBVc2Vyc1Rva2Vuc1JlcG9zaXRvcnlJbk1lbW9yeTtcbmxldCBkYXRlUHJvdmlkZXI6IERheWpzRGF0ZVByb3ZpZGVyO1xubGV0IG1haWxQcm92aWRlcjogTWFpbFByb3ZpZGVySW5NZW1vcnk7XG5cbmRlc2NyaWJlKFwiU2VuZEZvcmdvdFBhc3N3b3JkTWFpbFVzZUNhc2VcIiwgKCkgPT4ge1xuICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IHtcbiAgICB1c2Vyc1JlcG9zaXRvcnlJbk1lbW9yeSA9IG5ldyBVc2Vyc1JlcG9zaXRvcnlJbk1lbW9yeSgpO1xuICAgIHVzZXJzVG9rZW5zUmVwb3NpdG9yeUluTWVtb3J5ID0gbmV3IFVzZXJzVG9rZW5zUmVwb3NpdG9yeUluTWVtb3J5KCk7XG4gICAgZGF0ZVByb3ZpZGVyID0gbmV3IERheWpzRGF0ZVByb3ZpZGVyKCk7XG4gICAgbWFpbFByb3ZpZGVyID0gbmV3IE1haWxQcm92aWRlckluTWVtb3J5KCk7XG5cbiAgICBzZW5kRm9yZ290UGFzc3dvcmRNYWlsVXNlQ2FzZSA9IG5ldyBTZW5kRm9yZ290UGFzc3dvcmRNYWlsVXNlQ2FzZShcbiAgICAgIHVzZXJzUmVwb3NpdG9yeUluTWVtb3J5LFxuICAgICAgdXNlcnNUb2tlbnNSZXBvc2l0b3J5SW5NZW1vcnksXG4gICAgICBkYXRlUHJvdmlkZXIsXG4gICAgICBtYWlsUHJvdmlkZXJcbiAgICApO1xuICB9KTtcblxuICBpdChcIlNob3VsZCBiZSBhYmxlIHRvIHNlbmQgYSBlbWFpbCBmb3IgYSB1c2VyIHRvIHJlc2V0IGhpcyBwYXNzd29yZFwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3Qgc2VuZE1haWwgPSBzcHlPbihtYWlsUHJvdmlkZXIsIFwic2VuZE1haWxcIik7XG5cbiAgICBhd2FpdCB1c2Vyc1JlcG9zaXRvcnlJbk1lbW9yeS5jcmVhdGUoe1xuICAgICAgZW1haWw6IFwidG9rdnV6ZXJAdmFkaW52by5nblwiLFxuICAgICAgbmFtZTogXCJBbGxpZSBKZW5raW5zXCIsXG4gICAgICBwYXNzd29yZDogXCJ0ZXN0XCIsXG4gICAgfSk7XG4gICAgYXdhaXQgc2VuZEZvcmdvdFBhc3N3b3JkTWFpbFVzZUNhc2UuZXhlY3V0ZShcInRva3Z1emVyQHZhZGludm8uZ25cIik7XG5cbiAgICBleHBlY3Qoc2VuZE1haWwpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgfSk7XG5cbiAgaXQoXCJTaG91bGQgbm90IGJlIGFibGUgdG8gc2VuZCBhIGVtYWlsIGZvciBhbiBpbmV4aXN0ZW50IHVzZXJcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHNlbmRNYWlsID0gc3B5T24obWFpbFByb3ZpZGVyLCBcInNlbmRNYWlsXCIpO1xuICAgIGF3YWl0IGV4cGVjdChcbiAgICAgIHNlbmRGb3Jnb3RQYXNzd29yZE1haWxVc2VDYXNlLmV4ZWN1dGUoXCJjdWNva0Bzb3Nvbi5hdVwiKVxuICAgICkucmVqZWN0cy50b0JlSW5zdGFuY2VPZihTZW5kRm9yZ290UGFzc3dvcmRNYWlsRXJyb3IpO1xuXG4gICAgZXhwZWN0KHNlbmRNYWlsKS5ub3QudG9CZUNhbGxlZCgpO1xuICB9KTtcblxuICBpdChcIlNob3VsZCBiZSBhYmxlIHRvIGNyZWF0ZSBhIG5ldyB0b2tlbiB0byByZXNldCBwYXNzd29yZFwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgZ2VuZXJhdGVkVG9rZW4gPSBzcHlPbih1c2Vyc1Rva2Vuc1JlcG9zaXRvcnlJbk1lbW9yeSwgXCJjcmVhdGVcIik7XG5cbiAgICBhd2FpdCB1c2Vyc1JlcG9zaXRvcnlJbk1lbW9yeS5jcmVhdGUoe1xuICAgICAgZW1haWw6IFwidG9rdnV6ZXJAdmFkaW52by5nblwiLFxuICAgICAgbmFtZTogXCJBbGxpZSBKZW5raW5zXCIsXG4gICAgICBwYXNzd29yZDogXCJ0ZXN0XCIsXG4gICAgfSk7XG4gICAgYXdhaXQgc2VuZEZvcmdvdFBhc3N3b3JkTWFpbFVzZUNhc2UuZXhlY3V0ZShcInRva3Z1emVyQHZhZGludm8uZ25cIik7XG5cbiAgICBleHBlY3QoZ2VuZXJhdGVkVG9rZW4pLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==