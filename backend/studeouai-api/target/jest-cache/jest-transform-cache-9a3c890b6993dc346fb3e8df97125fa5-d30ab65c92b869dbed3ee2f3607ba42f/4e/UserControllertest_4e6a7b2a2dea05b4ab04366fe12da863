78fa004fa2a1817fc9db0a1075ef3fea
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
jest.mock('../services/UserService');
require("reflect-metadata");
var UserController_1 = __importDefault(require("./UserController"));
var express_1 = require("@jest-mock/express");
var faker_1 = __importDefault(require("faker"));
var UserService_1 = __importDefault(require("../services/UserService"));
var UserServiceMock = UserService_1.default;
describe('Test user controller', function () {
    beforeEach(function () {
        UserServiceMock.prototype.createUser.mockRestore();
    });
    test('Should response 201 when call execute() with success', function () { return __awaiter(void 0, void 0, void 0, function () {
        var idMock, createUserReturnMock, mockRequest, _a, res, next;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    idMock = faker_1.default.datatype.uuid();
                    createUserReturnMock = {
                        id: idMock,
                        name: faker_1.default.datatype.string(),
                        password: faker_1.default.datatype.string(),
                        email: faker_1.default.internet.email(),
                        isAdmin: false,
                        avatar: faker_1.default.datatype.string(),
                        avatar_url: faker_1.default.datatype.string(),
                        created_at: new Date(),
                    };
                    mockRequest = (0, express_1.getMockReq)({ params: { id: idMock } });
                    _a = (0, express_1.getMockRes)(), res = _a.res, next = _a.next;
                    UserServiceMock.prototype.findUserById.mockResolvedValue(createUserReturnMock);
                    return [4 /*yield*/, UserController_1.default.findUserById(mockRequest, res, next)];
                case 1:
                    _b.sent();
                    console.log(res);
                    expect(res.status).toBeCalledWith(200);
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvbGVvL0RvY3VtZW50b3MvcHJvamV0b3MvbWluZS9UQ0MvU3R1ZGVvVUFJL2JhY2tlbmQvc3R1ZGVvdWFpLWFwaS9zcmMvbW9kdWxlcy9hY2NvdW50cy9jb250cm9sbGVycy9Vc2VyQ29udHJvbGxlci50ZXN0LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU0EsSUFBSSxDQUFDLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBUHJDLDRCQUEwQjtBQUMxQixvRUFBOEM7QUFDOUMsOENBQTREO0FBQzVELGdEQUEwQjtBQUMxQix3RUFBa0Q7QUFLbEQsSUFBTSxlQUFlLEdBQUcscUJBQW1ELENBQUM7QUFFNUUsUUFBUSxDQUFDLHNCQUFzQixFQUFFO0lBQy9CLFVBQVUsQ0FBQztRQUNULGVBQWUsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3JELENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLHNEQUFzRCxFQUFFOzs7OztvQkFDckQsTUFBTSxHQUFHLGVBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7b0JBQy9CLG9CQUFvQixHQUFTO3dCQUNqQyxFQUFFLEVBQUUsTUFBTTt3QkFDVixJQUFJLEVBQUUsZUFBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUU7d0JBQzdCLFFBQVEsRUFBRSxlQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRTt3QkFDakMsS0FBSyxFQUFFLGVBQUssQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFO3dCQUM3QixPQUFPLEVBQUUsS0FBSzt3QkFDZCxNQUFNLEVBQUUsZUFBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUU7d0JBQy9CLFVBQVUsRUFBRSxlQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRTt3QkFDbkMsVUFBVSxFQUFFLElBQUksSUFBSSxFQUFFO3FCQUN2QixDQUFDO29CQUVJLFdBQVcsR0FBRyxJQUFBLG9CQUFVLEVBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO29CQUNyRCxLQUFnQixJQUFBLG9CQUFVLEdBQUUsRUFBMUIsR0FBRyxTQUFBLEVBQUUsSUFBSSxVQUFBLENBQWtCO29CQUVuQyxlQUFlLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsQ0FDdEQsb0JBQW9CLENBQ3JCLENBQUM7b0JBRUYscUJBQU0sd0JBQWMsQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBQTs7b0JBQXpELFNBQXlELENBQUM7b0JBRTFELE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7b0JBRWpCLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs7O1NBQ3hDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL2xlby9Eb2N1bWVudG9zL3Byb2pldG9zL21pbmUvVENDL1N0dWRlb1VBSS9iYWNrZW5kL3N0dWRlb3VhaS1hcGkvc3JjL21vZHVsZXMvYWNjb3VudHMvY29udHJvbGxlcnMvVXNlckNvbnRyb2xsZXIudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyIH0gZnJvbSAnQG1vZHVsZXMvYWNjb3VudHMvaW5mcmEvdHlwZW9ybS9lbnRpdGllcy9Vc2VyJztcbmltcG9ydCB7IEFwcEVycm9yIH0gZnJvbSAnQHNoYXJlZC9lcnJvcnMvYXBwRXJyb3InO1xuaW1wb3J0ICdyZWZsZWN0LW1ldGFkYXRhJztcbmltcG9ydCBVc2VyQ29udHJvbGxlciBmcm9tICcuL1VzZXJDb250cm9sbGVyJztcbmltcG9ydCB7IGdldE1vY2tSZXEsIGdldE1vY2tSZXMgfSBmcm9tICdAamVzdC1tb2NrL2V4cHJlc3MnO1xuaW1wb3J0IGZha2VyIGZyb20gJ2Zha2VyJztcbmltcG9ydCBVc2VyU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9Vc2VyU2VydmljZSc7XG5pbXBvcnQgQ3JlYXRlVXNlclJlcXVlc3QgZnJvbSAnLi4vbW9kZWxzL0NyZWF0ZVVzZXJSZXF1ZXN0JztcblxuamVzdC5tb2NrKCcuLi9zZXJ2aWNlcy9Vc2VyU2VydmljZScpO1xuXG5jb25zdCBVc2VyU2VydmljZU1vY2sgPSBVc2VyU2VydmljZSBhcyBqZXN0Lk1vY2tlZENsYXNzPHR5cGVvZiBVc2VyU2VydmljZT47XG5cbmRlc2NyaWJlKCdUZXN0IHVzZXIgY29udHJvbGxlcicsICgpID0+IHtcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgVXNlclNlcnZpY2VNb2NrLnByb3RvdHlwZS5jcmVhdGVVc2VyLm1vY2tSZXN0b3JlKCk7XG4gIH0pO1xuXG4gIHRlc3QoJ1Nob3VsZCByZXNwb25zZSAyMDEgd2hlbiBjYWxsIGV4ZWN1dGUoKSB3aXRoIHN1Y2Nlc3MnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgaWRNb2NrID0gZmFrZXIuZGF0YXR5cGUudXVpZCgpO1xuICAgIGNvbnN0IGNyZWF0ZVVzZXJSZXR1cm5Nb2NrOiBVc2VyID0ge1xuICAgICAgaWQ6IGlkTW9jayxcbiAgICAgIG5hbWU6IGZha2VyLmRhdGF0eXBlLnN0cmluZygpLFxuICAgICAgcGFzc3dvcmQ6IGZha2VyLmRhdGF0eXBlLnN0cmluZygpLFxuICAgICAgZW1haWw6IGZha2VyLmludGVybmV0LmVtYWlsKCksXG4gICAgICBpc0FkbWluOiBmYWxzZSxcbiAgICAgIGF2YXRhcjogZmFrZXIuZGF0YXR5cGUuc3RyaW5nKCksXG4gICAgICBhdmF0YXJfdXJsOiBmYWtlci5kYXRhdHlwZS5zdHJpbmcoKSxcbiAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCksXG4gICAgfTtcblxuICAgIGNvbnN0IG1vY2tSZXF1ZXN0ID0gZ2V0TW9ja1JlcSh7IHBhcmFtczogeyBpZDogaWRNb2NrIH0gfSk7XG4gICAgY29uc3QgeyByZXMsIG5leHQgfSA9IGdldE1vY2tSZXMoKTtcblxuICAgIFVzZXJTZXJ2aWNlTW9jay5wcm90b3R5cGUuZmluZFVzZXJCeUlkLm1vY2tSZXNvbHZlZFZhbHVlKFxuICAgICAgY3JlYXRlVXNlclJldHVybk1vY2ssXG4gICAgKTtcblxuICAgIGF3YWl0IFVzZXJDb250cm9sbGVyLmZpbmRVc2VyQnlJZChtb2NrUmVxdWVzdCwgcmVzLCBuZXh0KTtcblxuICAgIGNvbnNvbGUubG9nKHJlcyk7XG5cbiAgICBleHBlY3QocmVzLnN0YXR1cykudG9CZUNhbGxlZFdpdGgoMjAwKTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==