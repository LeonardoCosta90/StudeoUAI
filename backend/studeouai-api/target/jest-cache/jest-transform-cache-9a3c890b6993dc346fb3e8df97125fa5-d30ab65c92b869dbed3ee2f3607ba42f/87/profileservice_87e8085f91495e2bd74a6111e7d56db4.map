{"version":3,"sources":["/home/leo/Documentos/projetos/mine/TCC/StudeoUAI/backend/studeouai-api/src/modules/accounts/services/profile-service.ts"],"names":[],"mappingsyBAAA,CAAA,CAAA;AACA,IAAA,SAAA;AAAA;AAAA,2BAAA,OAAA,CAAA,SAAA,CAAA,CAAA;AAEA,IAAA,iBAAA;AAAA;AAAA,2BAAA,OAAA,CAAA,yCAAA,CAAA,CAAA;AAEA,IAAA,cAAA;AAAA;AAAA,2BAAA,YAAA;AAAA;AAAA;;AAAA,WAAA,cAAA,GAAA;AAAA;AAAA;AAYC;;AAZD;AAAA;;AACQ,EAAA,cAAA,CAAA,SAAA,CAAA,eAAA,GAAN,UAAsB,EAAtB,EAAgC;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AACxB,YAAA,cAAc,GAAG,CAAA,GAAA,SAAA,CAAA,mBAAA,EAAoB,iBAAA,CAAA,eAApB,CAAjB;;;;AAEO,mBAAA,CAAA;AAAA;AAAA,cAAM,cAAc,CAAC,OAAf,CAAuB,EAAvB,CAAN,CAAA;;;;;;AAAP,YAAA,IAAI,GAAG,EAAA,CAAA,IAAA,EAAP;;;;;AAEN,gBAAI,CAAC,IAAL,EAAW;AAAA;AAAA;AAAA;AACT,oBAAM,IAAI,UAAA,CAAA,QAAJ,CAAa,gBAAb,EAA+B,GAA/B,CAAN;AACD,aAFD;AAAA;AAAA;AAAA;AAAA;;;AAIA,mBAAA,CAAA;AAAA;AAAA,cAAO,IAAP,CAAA;;;;AACD,GAVK;;AADR;AAAA;AAYA,SAAA,cAAA;AAAC,CAZD,EAAA,CAAA;;;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { AppError } from '@shared/errors/appError';\nimport { getCustomRepository } from 'typeorm';\nimport { ProfileResponse } from '../models/profile-response';\nimport { UsersRepository } from '../typeorm/repositories/UsersRepository';\n\nexport class ProfileService {\n  async findProfileById(id: string): Promise<ProfileResponse> {\n    const userRepository = getCustomRepository(UsersRepository);\n\n    const user = await userRepository.findOne(id);\n\n    if (!user) {\n      throw new AppError('User not found', 404);\n    }\n\n    return user;\n  }\n}\n"]}